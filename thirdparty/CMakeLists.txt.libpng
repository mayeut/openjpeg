project(libpng C)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng/png.h ${CMAKE_CURRENT_BINARY_DIR}/libpng-inc/png.h COPYONLY)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng/pngconf.h ${CMAKE_CURRENT_BINARY_DIR}/libpng-inc/pngconf.h COPYONLY)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng/scripts/pnglibconf.h.prebuilt ${CMAKE_CURRENT_BINARY_DIR}/libpng-inc/pnglibconf.h)

# OUR SOURCES
set(libpng_public_hdrs
  ${CMAKE_CURRENT_BINARY_DIR}/libpng-inc/png.h
  ${CMAKE_CURRENT_BINARY_DIR}/libpng-inc/pngconf.h
  ${CMAKE_CURRENT_BINARY_DIR}/libpng-inc/pnglibconf.h
)
set(libpng_sources
  pngdebug.h
  pnginfo.h
  pngpriv.h
  pngstruct.h
  png.c
  pngerror.c
  pngget.c
  pngmem.c
  pngpread.c
  pngread.c
  pngrio.c
  pngrtran.c
  pngrutil.c
  pngset.c
  pngtrans.c
  pngwio.c
  pngwrite.c
  pngwtran.c
  pngwutil.c
)

foreach(SRCFILE IN LISTS libpng_sources)
  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libpng/${SRCFILE} ${CMAKE_CURRENT_BINARY_DIR}/libpng-src/${SRCFILE} COPYONLY)
  set(PNG_SOURCES ${PNG_SOURCES} ${CMAKE_CURRENT_BINARY_DIR}/libpng-src/${SRCFILE})
endforeach()

#
set(LIBTARGET "png")
#
add_library(${LIBTARGET} STATIC ${PNG_SOURCES} ${libpng_public_hdrs})
#
if(MSVC)
  set_target_properties(${LIBTARGET} PROPERTIES PREFIX "lib")
endif(MSVC)
#
target_link_libraries(${LIBTARGET} ${Z_LIBNAME} ${M_LIBRARY})
#
set_target_properties(${LIBTARGET}
	PROPERTIES
    OUTPUT_NAME "${LIBTARGET}"
	ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/thirdparty/lib)
#
get_property(PNG_TARGET_INC TARGET ${LIBTARGET} PROPERTY INCLUDE_DIRECTORIES)
set_property(TARGET ${LIBTARGET} PROPERTY INCLUDE_DIRECTORIES ${CMAKE_CURRENT_BINARY_DIR}/libpng-inc;${CMAKE_CURRENT_SOURCE_DIR}/libpng;${CMAKE_CURRENT_BINARY_DIR}/zlib-inc;${PNG_TARGET_INC})
